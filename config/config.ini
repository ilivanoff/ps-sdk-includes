; Базовые настройки системы
[core]
; Название проекта. Если sdk, то система работает в режиме sdk
project=sdk
; Признак продуктивного режима
production=false

; Настройки логирования
[logging]
; Включено ли логирование
enabled=true

; Настройки профилирования
[profiling]
; Включено ли профилирование
enabled=true
; Максимальный размер файла аудита (в мегабайтах)
max-file-size=1

; "Окружающие среды" для работы ps-sdk. необходимы в случае, когда ps-sdk работает, как часть другой CMS, например wordpress.
; В таком случае в ajax контексте будут автоматически подключены классы wordpress и использован нужный провайдер безопасности.
[environment]
; Текущая рабочая среда
environment=
; Список рабочих сред. Директория должна содержать файл название_окружения.php (например wordpress/wordpress.php)
environments[wordpress]=ps-includes/src/environment/wordpress/

; Элементы, выполняемые chrone при периодическом вызове ps-cron
[cron-pocess]
; Указываемые классы должны быть наследниками PsCronProcess
; cron[]=PsCronProcessImpl

; Настройки подключения к базам данных
[connection-pool]
; Коннект к продуктовому серверу
; production=mysql://sdk:sdk@localhost/sdk
production[host]=localhost
production[user]=sdk
production[pwd]=sdk
production[db]=ps_sdk

; Коннект к тестовому серверу
; test=mysql://sdk:sdk@localhost/sdk_test
test[host]=localhost
test[user]=sdk
test[pwd]=sdk
test[db]=ps_sdk_test

; Коннект к базе под рутом
; root=mysql://root:1111@localhost
root[host]=localhost
root[user]=root
root[pwd]=1111
root[db]=

; Настройки SMTP сервера
[smtp]
; Адрес SMTP сервера
host='smtp.yandex.ru'
; Имя для доступа к SMTP
user='postupayu@yandex.ru'
; Пароль для доступа к SMTP
pwd='Anastasiya!1997'

; Настройки отправки писем
[emails]
; Максимальное кол-во дампов файлов последних писем
max-dump-files-count=10

; Настройки работы с исключениями
[exceptions]
; Максимальное кол-во дампов файлов последних эксепшенов
max-dump-files-count=10

; Расположение плагинов и шаблонов Smarty
[smarty]
; Класс фильтра, должен наследовать PSSmartyFilter
filter=PSSmartyFilter
; Класс плагинов, должен наследовать PSSmartyPlugin
plugin=PSSmartyPlugin

; Шаблоны .tpl смарти
templates[]=ps-addon/smarty/templates/
templates[]=ps-includes/smarty/templates/

; Блочные функции block.hidden.php
plugins[]=ps-includes/smarty/plugins/blocks/
plugins[]=ps-includes/smarty/plugins/blocks/text/
plugins[]=ps-includes/smarty/plugins/blocks/child/
plugins[]=ps-includes/smarty/plugins/blocks/content/

; Функции смарти function.progress.php
plugins[]=ps-includes/smarty/plugins/functions/
plugins[]=ps-includes/smarty/plugins/functions/content/
plugins[]=ps-includes/smarty/plugins/functions/mmedia/
plugins[]=ps-includes/smarty/plugins/functions/replacements/

; Модификаторы смарти modifier.price.php
plugins[]=ps-includes/smarty/plugins/modifiers/
plugins[]=ps-includes/smarty/plugins/modifiers/content/


; Настройка кеширования
[cache]
; Движок для обеспечения работы с кешами (должен наследовать интерфейс PSCacheEngine)
engine=PSCacheEngineFile

; Время жизни файлов кеширования в случае использования движка PSCacheEngineFile, в минутах
cache-file-lifetime=720

; Настройки загрузки файлов на файловую систему
[uploads]
; Директория для хранения загруженных файлов
; Данную директорию нужно защитить index.php и .htaccess.
dir=ps-content/uploads/

; Настройки для функционала маппингов
[mappings]
; Хранилище маппингов. Должно быть наследником MappingStorage.
storage=MappingStorage

; Хранилище web-страниц
[web-pages]
; Класс, который отвечает за регистрацию web страниц
storage=WebPagesStorage
; Признак нормализации страницы перед выводом (удаление двойных пробелов)
normalize-page=true

[external-libs]
; Класс, который занимается подключением библиотек
libs=PsLibs

; Группы действий ajax. При запросе JavaScript передаёт код группы, в которой должно располагаться действие.
[ajax-actions]
admin[]=ps-addon/ajax/actions/admin/
admin[]=ps-includes/ajax/actions/admin/

client[]=ps-addon/ajax/actions/client/
client[]=ps-includes/ajax/actions/client/

; Настройки файлов включений
[project-includes]
; Файл глобальных настроек, который подключается первым и может быть настроен через панель администратора. Подробности - см. в PsGlobals.
globals-file=ps-addon/src/Globals.php
; Директория, классы которой подключаются для проекта в случае, когда пользователь авторизован под администратором
src-admin=ps-addon/src/admin
; Директория, классы которой подключаются для проекта в любом случае
src-common=ps-addon/src/common

; Мост между сервером и клиентом, позволяющий определять константы, которые потом будут переданы в JavaScript
; Из указанных классов будут взяты все const`анты и определены в глобальной переменной (например CONST или DEFS).
[php-js-brige]
;Обратиться можно через DEFS.MY.VALUE, если в MyDefsJs определена const VALUE=1;
;DEFS[MY]=MyDefsJs
;Обратиться можно через CONST.MY.VALUE, если в MyConstJs определена const VALUE=1;
;CONST[MY]=MyConstJs

; Настройки взаимодействия с пользователем
[user-interaction]
; Интервал между действиями пользователя (в секундах)
activity-interval=10

; Классы аудита
[audit]
; Массив классов аудита. Все они должны наследовать PsAuditAbstract
audit[1]=UserAudit
audit[2]=MailAudit
audit[3]=IpBanAudit

; Массив отключённых аудитов
; disabled[]=1

; Классы, к 'public static final' методам которых будет предоставлен доступ из админского web-интерфейса
[admin-access-methods]
; Классы, методы которых доступны всегда
; all[]=
; Классы, методы которых доступны только в девелоперском режиме (не продакшн)
dev[]=DevUsers